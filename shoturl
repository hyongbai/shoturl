#!/bin/bash

urlencode() {
    local length="${#1}"
    for (( i = 0; i < length; i++ )); do
        local c="${1:i:1}"
        case $c in
            [a-zA-Z0-9.~_-]) printf "$c" ;;
            *) printf '%%%02X' "'$c"
        esac
    done
}

urldecode() {
    # urldecode <string>
    local url_encoded="${1//+/ }"
    printf '%b' "${url_encoded//%/\x}"
}

function    sina_short()
{
    tURL=$1
    if [ ! $tURL ]; then
        return
    fi
    SINA_APP_KEY="2483680040"
    #sina shorten url api
    API_ADDR="http://api.t.sina.com.cn/short_url/shorten.json?source=$SINA_APP_KEY&url_long=${tURL}"
    
    #get result from sina shorten url api
    result=`curl "$API_ADDR" 2>/dev/null`
    
    #get shorten url from result
    shorturl=`echo $result|awk -F\" '{print $4}'`

    echo "$shorturl"
}

function    baidu_short()
{
    if [ $1 ]; then
        result=`curl dwz.cn/create.php -d "url=$1" 2>/dev/null`
        shorturl=`echo $result|awk -F\" '{print $4}'`
        shorturl=${shorturl/\///}
        echo `escape_char "$shorturl"`
    fi
}

function    google_short()
{
    if [ $1 ]; then  
        param="{\"longUrl\": \"$1\"}"
        result=`curl   https://www.googleapis.com/urlshortener/v1/url -H 'Content-Type: application/json' -d "$param" 2>/dev/null`
        shorturl=`echo $result | grep "\"id\"\:" | awk -F"\"id\"\:" '{print $2}' | awk -F"\," '{print $1}' | awk -F"\"" '{print $2}'`
        echo $shorturl
    fi
}

function    bitly_short()
{
    tURL=$1
    if [ ! $tURL ]; then
        return
    fi
    BITLY_ACCESS_TOKEN="4931d54354f59833167e7976f9a372baf72224a3"
    result=`curl --connect-timeout $CONNECT_TIMEOUT  "https://api-ssl.bitly.com/v3/shorten?access_token=${BITLY_ACCESS_TOKEN}&longUrl=${tURL}" 2> /dev/null`
    result=`escape_char $result`
    echo $result  | awk -F\"url\": '{print $2}' | awk -F\" '{print $2}'
}

function    get_protocol()
{
    GET_PROTOCOL_URL=$1
    echo "${GET_PROTOCOL_URL%://*}"
}

function    get_net_addr()
{
    GET_NET_ADDR_URL=$1
    echo "${GET_NET_ADDR_URL#*://}"
}

function    colorize()
{
    echo -e "\033[;33;1m${1}\033[0m"
}

function optimize_url()
{
    OPTIMIZE_URL="$1"
    NET_ADDR=`get_net_addr "$OPTIMIZE_URL"`
    PROTOCOL=`get_protocol "$OPTIMIZE_URL"`

    if [ $PROTOCOL != "https" ] && [ $PROTOCOL != "http" ]; then
        PROTOCOL="http"
    fi

    echo "`urlencode "${PROTOCOL}://${NET_ADDR}"`"
}

function    escape_char()
{
    OLD_CHAR=$1
    if [ ! $OLD_CHAR ]; then
        return
    fi
    echo ${OLD_CHAR//\\\///}
}

function    get_ctrl()
{
    if [ `uname` == "Darwin" ]; then
        echo "⌘"
    else
        echo "Ctrl"
    fi
}

###################
## functions END ##
###################

URL=$1
if [ ! $URL ]; then
    echo "Pls input an url"
    exit
fi

# optimize_url "$URL"
# exit

URL=`optimize_url "$URL"`
CONNECT_TIMEOUT=50
###################
##   init  END   ##
###################

echo
echo "------------------------------------------------------------------------------"
echo "| Using shoturl \"{URL ADDRESS}\" instead of shoturl {URL ADDRESS} is better"
echo "| "
echo "|     long press `get_ctrl` and double click url to browser"
echo "| "
# shorten by sina
echo "| shortening by sina"
echo "| "
SINA=`sina_short "$URL"`
SINA=`get_net_addr $SINA`
echo "|        `colorize $SINA`"
echo "| "

# shorten by baidu
echo "| shortening by baidu"
echo "| "
BAIDU=`baidu_short "$URL"`
BAIDU=`get_net_addr $BAIDU`
echo "|       `colorize $BAIDU`"
echo "| "

# shorten by bitly
echo "| shortening by bitly"
echo "| "
BITLY=`bitly_short "$URL"`
BITLY=`get_net_addr $BITLY`
echo "|      `colorize $BITLY`"
echo "| "

# shorten by google
# echo "| shortening by google"
# GOOG=`google_short "$URL"`
# GOOG=`get_net_addr $GOOG`
# echo "|google      `colorize $GOOG`"
# echo "| "
echo "------------------------------------------------------------------------------Ï
echo



